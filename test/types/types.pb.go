// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test/types/types.proto

package types

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "github.com/kei2100/protoc-gen-marshal-zap"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Enumerations
// https://developers.google.com/protocol-buffers/docs/proto#enum
type Types_Enum int32

const (
	Types_ENUM_0 Types_Enum = 0
	Types_ENUM_1 Types_Enum = 1
	Types_ENUM_2 Types_Enum = 2
)

var Types_Enum_name = map[int32]string{
	0: "ENUM_0",
	1: "ENUM_1",
	2: "ENUM_2",
}

var Types_Enum_value = map[string]int32{
	"ENUM_0": 0,
	"ENUM_1": 1,
	"ENUM_2": 2,
}

func (x Types_Enum) String() string {
	return proto.EnumName(Types_Enum_name, int32(x))
}

func (Types_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_61f12dd0de6ed4ab, []int{0, 0}
}

type Types struct {
	SecretVal string `protobuf:"bytes,1,opt,name=secret_val,json=secretVal,proto3" json:"secret_val,omitempty"`
	// Scalar Value Types
	// https://developers.google.com/protocol-buffers/docs/proto#scalar
	DoubleVal   float64    `protobuf:"fixed64,2,opt,name=double_val,json=doubleVal,proto3" json:"double_val,omitempty"`
	FloatVal    float32    `protobuf:"fixed32,3,opt,name=float_val,json=floatVal,proto3" json:"float_val,omitempty"`
	Int32Val    int32      `protobuf:"varint,4,opt,name=int32_val,json=int32Val,proto3" json:"int32_val,omitempty"`
	Int64Val    int64      `protobuf:"varint,5,opt,name=int64_val,json=int64Val,proto3" json:"int64_val,omitempty"`
	Uint32Val   uint32     `protobuf:"varint,6,opt,name=uint32_val,json=uint32Val,proto3" json:"uint32_val,omitempty"`
	Uint64Val   uint64     `protobuf:"varint,7,opt,name=uint64_val,json=uint64Val,proto3" json:"uint64_val,omitempty"`
	Sint32Val   int32      `protobuf:"zigzag32,8,opt,name=sint32_val,json=sint32Val,proto3" json:"sint32_val,omitempty"`
	Sint64Val   int64      `protobuf:"zigzag64,9,opt,name=sint64_val,json=sint64Val,proto3" json:"sint64_val,omitempty"`
	Fixed32Val  uint32     `protobuf:"fixed32,10,opt,name=fixed32_val,json=fixed32Val,proto3" json:"fixed32_val,omitempty"`
	Fixed64Val  uint64     `protobuf:"fixed64,11,opt,name=fixed64_val,json=fixed64Val,proto3" json:"fixed64_val,omitempty"`
	Sfixed32Val int32      `protobuf:"fixed32,12,opt,name=sfixed32_val,json=sfixed32Val,proto3" json:"sfixed32_val,omitempty"`
	Sfixed64Val int64      `protobuf:"fixed64,13,opt,name=sfixed64_val,json=sfixed64Val,proto3" json:"sfixed64_val,omitempty"`
	BoolVal     bool       `protobuf:"varint,14,opt,name=bool_val,json=boolVal,proto3" json:"bool_val,omitempty"`
	StringVal   string     `protobuf:"bytes,15,opt,name=string_val,json=stringVal,proto3" json:"string_val,omitempty"`
	BytesVal    []byte     `protobuf:"bytes,16,opt,name=bytes_val,json=bytesVal,proto3" json:"bytes_val,omitempty"`
	EnumVal     Types_Enum `protobuf:"varint,17,opt,name=enum_val,json=enumVal,proto3,enum=types.Types_Enum" json:"enum_val,omitempty"`
	// Other Message Types
	// https://developers.google.com/protocol-buffers/docs/proto#other
	OtherTypeVal           *OtherType1            `protobuf:"bytes,18,opt,name=other_type_val,json=otherTypeVal,proto3" json:"other_type_val,omitempty"`
	NestedTypeVal          *Types_NestedType      `protobuf:"bytes,19,opt,name=nested_type_val,json=nestedTypeVal,proto3" json:"nested_type_val,omitempty"`
	OtherTypeNestedTypeVal *OtherType2_NestedType `protobuf:"bytes,20,opt,name=other_type_nested_type_val,json=otherTypeNestedTypeVal,proto3" json:"other_type_nested_type_val,omitempty"`
	// Oneof
	// https://developers.google.com/protocol-buffers/docs/proto#oneof
	//
	// Types that are valid to be assigned to OneofVal:
	//	*Types_OneofStringVal
	//	*Types_OneofInt64Val
	//	*Types_OneofBoolVal
	OneofVal isTypes_OneofVal `protobuf_oneof:"oneof_val"`
	// Maps
	// https://developers.google.com/protocol-buffers/docs/proto#updating
	MapVal1     map[string]string      `protobuf:"bytes,24,rep,name=map_val1,json=mapVal1,proto3" json:"map_val1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MapVal2     map[string]*OtherType1 `protobuf:"bytes,25,rep,name=map_val2,json=mapVal2,proto3" json:"map_val2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MapEmptyVal map[string]string      `protobuf:"bytes,26,rep,name=map_empty_val,json=mapEmptyVal,proto3" json:"map_empty_val,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Repeated
	// * Repeated Scalar Values
	// * Repeated Enumerations
	// * Repeated MessageTypes
	// * (Repeated Maps -> NOT supported)
	// * (Repeated Repeated -> NOT supported)
	RepeatedVal1     []string      `protobuf:"bytes,27,rep,name=repeated_val1,json=repeatedVal1,proto3" json:"repeated_val1,omitempty"`
	RepeatedVal2     []Types_Enum  `protobuf:"varint,28,rep,packed,name=repeated_val2,json=repeatedVal2,proto3,enum=types.Types_Enum" json:"repeated_val2,omitempty"`
	RepeatedVal3     []*OtherType1 `protobuf:"bytes,29,rep,name=repeated_val3,json=repeatedVal3,proto3" json:"repeated_val3,omitempty"`
	RepeatedEmptyVal []string      `protobuf:"bytes,30,rep,name=repeated_empty_val,json=repeatedEmptyVal,proto3" json:"repeated_empty_val,omitempty"`
	// TODO wellknown types
	// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf
	StructVal            *_struct.Struct `protobuf:"bytes,31,opt,name=struct_val,json=structVal,proto3" json:"struct_val,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Types) Reset()         { *m = Types{} }
func (m *Types) String() string { return proto.CompactTextString(m) }
func (*Types) ProtoMessage()    {}
func (*Types) Descriptor() ([]byte, []int) {
	return fileDescriptor_61f12dd0de6ed4ab, []int{0}
}

func (m *Types) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Types.Unmarshal(m, b)
}
func (m *Types) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Types.Marshal(b, m, deterministic)
}
func (m *Types) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Types.Merge(m, src)
}
func (m *Types) XXX_Size() int {
	return xxx_messageInfo_Types.Size(m)
}
func (m *Types) XXX_DiscardUnknown() {
	xxx_messageInfo_Types.DiscardUnknown(m)
}

var xxx_messageInfo_Types proto.InternalMessageInfo

func (m *Types) GetSecretVal() string {
	if m != nil {
		return m.SecretVal
	}
	return ""
}

func (m *Types) GetDoubleVal() float64 {
	if m != nil {
		return m.DoubleVal
	}
	return 0
}

func (m *Types) GetFloatVal() float32 {
	if m != nil {
		return m.FloatVal
	}
	return 0
}

func (m *Types) GetInt32Val() int32 {
	if m != nil {
		return m.Int32Val
	}
	return 0
}

func (m *Types) GetInt64Val() int64 {
	if m != nil {
		return m.Int64Val
	}
	return 0
}

func (m *Types) GetUint32Val() uint32 {
	if m != nil {
		return m.Uint32Val
	}
	return 0
}

func (m *Types) GetUint64Val() uint64 {
	if m != nil {
		return m.Uint64Val
	}
	return 0
}

func (m *Types) GetSint32Val() int32 {
	if m != nil {
		return m.Sint32Val
	}
	return 0
}

func (m *Types) GetSint64Val() int64 {
	if m != nil {
		return m.Sint64Val
	}
	return 0
}

func (m *Types) GetFixed32Val() uint32 {
	if m != nil {
		return m.Fixed32Val
	}
	return 0
}

func (m *Types) GetFixed64Val() uint64 {
	if m != nil {
		return m.Fixed64Val
	}
	return 0
}

func (m *Types) GetSfixed32Val() int32 {
	if m != nil {
		return m.Sfixed32Val
	}
	return 0
}

func (m *Types) GetSfixed64Val() int64 {
	if m != nil {
		return m.Sfixed64Val
	}
	return 0
}

func (m *Types) GetBoolVal() bool {
	if m != nil {
		return m.BoolVal
	}
	return false
}

func (m *Types) GetStringVal() string {
	if m != nil {
		return m.StringVal
	}
	return ""
}

func (m *Types) GetBytesVal() []byte {
	if m != nil {
		return m.BytesVal
	}
	return nil
}

func (m *Types) GetEnumVal() Types_Enum {
	if m != nil {
		return m.EnumVal
	}
	return Types_ENUM_0
}

func (m *Types) GetOtherTypeVal() *OtherType1 {
	if m != nil {
		return m.OtherTypeVal
	}
	return nil
}

func (m *Types) GetNestedTypeVal() *Types_NestedType {
	if m != nil {
		return m.NestedTypeVal
	}
	return nil
}

func (m *Types) GetOtherTypeNestedTypeVal() *OtherType2_NestedType {
	if m != nil {
		return m.OtherTypeNestedTypeVal
	}
	return nil
}

type isTypes_OneofVal interface {
	isTypes_OneofVal()
}

type Types_OneofStringVal struct {
	OneofStringVal string `protobuf:"bytes,21,opt,name=oneof_string_val,json=oneofStringVal,proto3,oneof"`
}

type Types_OneofInt64Val struct {
	OneofInt64Val int64 `protobuf:"varint,22,opt,name=oneof_int64_val,json=oneofInt64Val,proto3,oneof"`
}

type Types_OneofBoolVal struct {
	OneofBoolVal bool `protobuf:"varint,23,opt,name=oneof_bool_val,json=oneofBoolVal,proto3,oneof"`
}

func (*Types_OneofStringVal) isTypes_OneofVal() {}

func (*Types_OneofInt64Val) isTypes_OneofVal() {}

func (*Types_OneofBoolVal) isTypes_OneofVal() {}

func (m *Types) GetOneofVal() isTypes_OneofVal {
	if m != nil {
		return m.OneofVal
	}
	return nil
}

func (m *Types) GetOneofStringVal() string {
	if x, ok := m.GetOneofVal().(*Types_OneofStringVal); ok {
		return x.OneofStringVal
	}
	return ""
}

func (m *Types) GetOneofInt64Val() int64 {
	if x, ok := m.GetOneofVal().(*Types_OneofInt64Val); ok {
		return x.OneofInt64Val
	}
	return 0
}

func (m *Types) GetOneofBoolVal() bool {
	if x, ok := m.GetOneofVal().(*Types_OneofBoolVal); ok {
		return x.OneofBoolVal
	}
	return false
}

func (m *Types) GetMapVal1() map[string]string {
	if m != nil {
		return m.MapVal1
	}
	return nil
}

func (m *Types) GetMapVal2() map[string]*OtherType1 {
	if m != nil {
		return m.MapVal2
	}
	return nil
}

func (m *Types) GetMapEmptyVal() map[string]string {
	if m != nil {
		return m.MapEmptyVal
	}
	return nil
}

func (m *Types) GetRepeatedVal1() []string {
	if m != nil {
		return m.RepeatedVal1
	}
	return nil
}

func (m *Types) GetRepeatedVal2() []Types_Enum {
	if m != nil {
		return m.RepeatedVal2
	}
	return nil
}

func (m *Types) GetRepeatedVal3() []*OtherType1 {
	if m != nil {
		return m.RepeatedVal3
	}
	return nil
}

func (m *Types) GetRepeatedEmptyVal() []string {
	if m != nil {
		return m.RepeatedEmptyVal
	}
	return nil
}

func (m *Types) GetStructVal() *_struct.Struct {
	if m != nil {
		return m.StructVal
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Types) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Types_OneofStringVal)(nil),
		(*Types_OneofInt64Val)(nil),
		(*Types_OneofBoolVal)(nil),
	}
}

// Nested Types
// https://developers.google.com/protocol-buffers/docs/proto#nested
type Types_NestedType struct {
	NestedStringVal      string   `protobuf:"bytes,1,opt,name=nested_string_val,json=nestedStringVal,proto3" json:"nested_string_val,omitempty"`
	NestedSecretVal      string   `protobuf:"bytes,2,opt,name=nested_secret_val,json=nestedSecretVal,proto3" json:"nested_secret_val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Types_NestedType) Reset()         { *m = Types_NestedType{} }
func (m *Types_NestedType) String() string { return proto.CompactTextString(m) }
func (*Types_NestedType) ProtoMessage()    {}
func (*Types_NestedType) Descriptor() ([]byte, []int) {
	return fileDescriptor_61f12dd0de6ed4ab, []int{0, 0}
}

func (m *Types_NestedType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Types_NestedType.Unmarshal(m, b)
}
func (m *Types_NestedType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Types_NestedType.Marshal(b, m, deterministic)
}
func (m *Types_NestedType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Types_NestedType.Merge(m, src)
}
func (m *Types_NestedType) XXX_Size() int {
	return xxx_messageInfo_Types_NestedType.Size(m)
}
func (m *Types_NestedType) XXX_DiscardUnknown() {
	xxx_messageInfo_Types_NestedType.DiscardUnknown(m)
}

var xxx_messageInfo_Types_NestedType proto.InternalMessageInfo

func (m *Types_NestedType) GetNestedStringVal() string {
	if m != nil {
		return m.NestedStringVal
	}
	return ""
}

func (m *Types_NestedType) GetNestedSecretVal() string {
	if m != nil {
		return m.NestedSecretVal
	}
	return ""
}

type OtherType1 struct {
	OtherStringVal       string   `protobuf:"bytes,1,opt,name=other_string_val,json=otherStringVal,proto3" json:"other_string_val,omitempty"`
	OtherSecretVal       string   `protobuf:"bytes,2,opt,name=other_secret_val,json=otherSecretVal,proto3" json:"other_secret_val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OtherType1) Reset()         { *m = OtherType1{} }
func (m *OtherType1) String() string { return proto.CompactTextString(m) }
func (*OtherType1) ProtoMessage()    {}
func (*OtherType1) Descriptor() ([]byte, []int) {
	return fileDescriptor_61f12dd0de6ed4ab, []int{1}
}

func (m *OtherType1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OtherType1.Unmarshal(m, b)
}
func (m *OtherType1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OtherType1.Marshal(b, m, deterministic)
}
func (m *OtherType1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OtherType1.Merge(m, src)
}
func (m *OtherType1) XXX_Size() int {
	return xxx_messageInfo_OtherType1.Size(m)
}
func (m *OtherType1) XXX_DiscardUnknown() {
	xxx_messageInfo_OtherType1.DiscardUnknown(m)
}

var xxx_messageInfo_OtherType1 proto.InternalMessageInfo

func (m *OtherType1) GetOtherStringVal() string {
	if m != nil {
		return m.OtherStringVal
	}
	return ""
}

func (m *OtherType1) GetOtherSecretVal() string {
	if m != nil {
		return m.OtherSecretVal
	}
	return ""
}

type OtherType2 struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OtherType2) Reset()         { *m = OtherType2{} }
func (m *OtherType2) String() string { return proto.CompactTextString(m) }
func (*OtherType2) ProtoMessage()    {}
func (*OtherType2) Descriptor() ([]byte, []int) {
	return fileDescriptor_61f12dd0de6ed4ab, []int{2}
}

func (m *OtherType2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OtherType2.Unmarshal(m, b)
}
func (m *OtherType2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OtherType2.Marshal(b, m, deterministic)
}
func (m *OtherType2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OtherType2.Merge(m, src)
}
func (m *OtherType2) XXX_Size() int {
	return xxx_messageInfo_OtherType2.Size(m)
}
func (m *OtherType2) XXX_DiscardUnknown() {
	xxx_messageInfo_OtherType2.DiscardUnknown(m)
}

var xxx_messageInfo_OtherType2 proto.InternalMessageInfo

type OtherType2_NestedType struct {
	NestedStringVal      string   `protobuf:"bytes,1,opt,name=nested_string_val,json=nestedStringVal,proto3" json:"nested_string_val,omitempty"`
	NestedSecretVal      string   `protobuf:"bytes,2,opt,name=nested_secret_val,json=nestedSecretVal,proto3" json:"nested_secret_val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OtherType2_NestedType) Reset()         { *m = OtherType2_NestedType{} }
func (m *OtherType2_NestedType) String() string { return proto.CompactTextString(m) }
func (*OtherType2_NestedType) ProtoMessage()    {}
func (*OtherType2_NestedType) Descriptor() ([]byte, []int) {
	return fileDescriptor_61f12dd0de6ed4ab, []int{2, 0}
}

func (m *OtherType2_NestedType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OtherType2_NestedType.Unmarshal(m, b)
}
func (m *OtherType2_NestedType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OtherType2_NestedType.Marshal(b, m, deterministic)
}
func (m *OtherType2_NestedType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OtherType2_NestedType.Merge(m, src)
}
func (m *OtherType2_NestedType) XXX_Size() int {
	return xxx_messageInfo_OtherType2_NestedType.Size(m)
}
func (m *OtherType2_NestedType) XXX_DiscardUnknown() {
	xxx_messageInfo_OtherType2_NestedType.DiscardUnknown(m)
}

var xxx_messageInfo_OtherType2_NestedType proto.InternalMessageInfo

func (m *OtherType2_NestedType) GetNestedStringVal() string {
	if m != nil {
		return m.NestedStringVal
	}
	return ""
}

func (m *OtherType2_NestedType) GetNestedSecretVal() string {
	if m != nil {
		return m.NestedSecretVal
	}
	return ""
}

func init() {
	proto.RegisterEnum("types.Types_Enum", Types_Enum_name, Types_Enum_value)
	proto.RegisterType((*Types)(nil), "types.Types")
	proto.RegisterMapType((map[string]string)(nil), "types.Types.MapEmptyValEntry")
	proto.RegisterMapType((map[string]string)(nil), "types.Types.MapVal1Entry")
	proto.RegisterMapType((map[string]*OtherType1)(nil), "types.Types.MapVal2Entry")
	proto.RegisterType((*Types_NestedType)(nil), "types.Types.NestedType")
	proto.RegisterType((*OtherType1)(nil), "types.OtherType1")
	proto.RegisterType((*OtherType2)(nil), "types.OtherType2")
	proto.RegisterType((*OtherType2_NestedType)(nil), "types.OtherType2.NestedType")
}

func init() {
	proto.RegisterFile("test/types/types.proto", fileDescriptor_61f12dd0de6ed4ab)
}

var fileDescriptor_61f12dd0de6ed4ab = []byte{
	// 857 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xee, 0x24, 0x4d, 0x13, 0x9f, 0x24, 0xad, 0x63, 0x96, 0x6e, 0x9a, 0x6d, 0xd9, 0xa1, 0x2b,
	0xc1, 0xa8, 0xda, 0x26, 0x8d, 0x5b, 0x15, 0x54, 0x10, 0x88, 0x4a, 0x95, 0xca, 0x45, 0x8b, 0x34,
	0x0b, 0x15, 0xe2, 0x26, 0x72, 0xd2, 0x49, 0x1a, 0xd6, 0x3f, 0x91, 0x7f, 0xaa, 0x0d, 0x4f, 0xc0,
	0x1b, 0xf0, 0x24, 0xbc, 0x1f, 0x9a, 0x33, 0x63, 0x7b, 0x12, 0xb2, 0x17, 0xdc, 0x70, 0x63, 0xcd,
	0x9c, 0xef, 0xc7, 0xc7, 0x67, 0xce, 0x1c, 0xc3, 0x7e, 0x2a, 0x92, 0x74, 0x90, 0x2e, 0x17, 0x22,
	0x51, 0xcf, 0xfe, 0x22, 0x8e, 0xd2, 0xc8, 0xa9, 0xe1, 0xa6, 0xd7, 0x09, 0xbc, 0x38, 0x79, 0xf2,
	0xfc, 0xd3, 0x3f, 0xbc, 0x85, 0x42, 0x7a, 0x87, 0xb3, 0x28, 0x9a, 0xf9, 0x62, 0x80, 0xbb, 0x71,
	0x36, 0x1d, 0x24, 0x69, 0x9c, 0x4d, 0x52, 0x85, 0x1e, 0xff, 0xd5, 0x86, 0xda, 0xcf, 0x52, 0xea,
	0xbc, 0x01, 0x48, 0xc4, 0x24, 0x16, 0xe9, 0xe8, 0xd9, 0xf3, 0xbb, 0x84, 0x12, 0x66, 0x5d, 0x6f,
	0xff, 0xf9, 0x77, 0x97, 0x70, 0x4b, 0xc5, 0x1f, 0x3c, 0xdf, 0x39, 0x02, 0x78, 0x8c, 0xb2, 0xb1,
	0x2f, 0x90, 0x54, 0xa1, 0x84, 0x11, 0x6e, 0xa9, 0x88, 0x84, 0x5f, 0x81, 0x35, 0xf5, 0x23, 0x4f,
	0x59, 0x54, 0x29, 0x61, 0x15, 0xde, 0xc0, 0x80, 0x06, 0xe7, 0x61, 0x7a, 0xee, 0x22, 0xb8, 0x4d,
	0x09, 0xab, 0xf1, 0x06, 0x06, 0x4a, 0xf0, 0xf2, 0x02, 0xc1, 0x1a, 0x25, 0xac, 0x8a, 0xe0, 0xe5,
	0x85, 0x7e, 0x6b, 0x56, 0x4a, 0x77, 0x28, 0x61, 0x6d, 0x6e, 0x65, 0x85, 0x56, 0xc3, 0x5a, 0x5c,
	0xa7, 0x84, 0x6d, 0x2b, 0xb8, 0x50, 0x27, 0xa5, 0xba, 0x41, 0x09, 0xeb, 0x70, 0x2b, 0x31, 0xd5,
	0x49, 0xa9, 0xb6, 0x28, 0x61, 0x8e, 0x82, 0x95, 0xfa, 0x35, 0x34, 0xa7, 0xf3, 0x0f, 0xe2, 0x51,
	0xcb, 0x81, 0x12, 0x56, 0xe7, 0xa0, 0x43, 0x26, 0x41, 0x1b, 0x34, 0x29, 0x61, 0x3b, 0x9a, 0xa0,
	0x1c, 0x3e, 0x87, 0x56, 0x62, 0x5a, 0xb4, 0x28, 0x61, 0x7b, 0xbc, 0x99, 0x18, 0x1e, 0x05, 0x45,
	0x9b, 0xb4, 0x29, 0x61, 0x76, 0x4e, 0x51, 0x2e, 0x07, 0xd0, 0x18, 0x47, 0x91, 0x8f, 0xf0, 0x2e,
	0x25, 0xac, 0xc1, 0xeb, 0x72, 0x9f, 0x7f, 0x41, 0x1a, 0xcf, 0xc3, 0x19, 0x82, 0x7b, 0xf2, 0xe4,
	0xb8, 0xa5, 0x22, 0xba, 0xb4, 0xe3, 0x65, 0x2a, 0x12, 0x44, 0x6d, 0x4a, 0x58, 0x8b, 0x37, 0x30,
	0x20, 0xc1, 0xb7, 0xd0, 0x10, 0x61, 0x16, 0x20, 0xd6, 0xa1, 0x84, 0xed, 0xba, 0x9d, 0xbe, 0xea,
	0x2b, 0xec, 0x8a, 0xfe, 0x4d, 0x98, 0x05, 0xbc, 0x2e, 0x29, 0x92, 0xfd, 0x15, 0xec, 0x46, 0xe9,
	0x93, 0x88, 0x47, 0x92, 0x82, 0x1a, 0x87, 0x12, 0xd6, 0x2c, 0x34, 0x3f, 0x49, 0x50, 0x0a, 0x87,
	0xbc, 0x15, 0xe5, 0x6b, 0x29, 0xfc, 0x1e, 0xf6, 0x42, 0x91, 0xa4, 0xe2, 0xb1, 0x54, 0x7e, 0x82,
	0xca, 0x97, 0x2b, 0x6f, 0xbb, 0x47, 0x8e, 0x5c, 0xf3, 0x76, 0x58, 0xac, 0xa5, 0xc1, 0xaf, 0xd0,
	0x33, 0xde, 0xbc, 0xee, 0xf5, 0x02, 0xbd, 0x0e, 0xd7, 0xb3, 0x70, 0x4d, 0xc3, 0xfd, 0x22, 0xa1,
	0xfb, 0x15, 0xe7, 0x13, 0xb0, 0xa3, 0x50, 0x44, 0xd3, 0x91, 0x51, 0xc3, 0x4f, 0x65, 0x0d, 0x6f,
	0xb7, 0xf8, 0x2e, 0x22, 0xef, 0x8a, 0x52, 0x32, 0xd8, 0x53, 0xdc, 0xb2, 0x61, 0xf6, 0x65, 0xaf,
	0xde, 0x6e, 0xf1, 0x36, 0x02, 0x3f, 0xe6, 0x6d, 0xf3, 0x05, 0x28, 0xed, 0xa8, 0x38, 0xb4, 0x97,
	0xf2, 0xd0, 0x6e, 0xb7, 0x78, 0x0b, 0xe3, 0xd7, 0xfa, 0xec, 0x2e, 0xa0, 0x11, 0x78, 0x0b, 0x49,
	0x18, 0x76, 0xbb, 0xb4, 0xca, 0x9a, 0xee, 0xc1, 0x4a, 0x45, 0xee, 0xbc, 0xc5, 0x83, 0xe7, 0x0f,
	0x6f, 0xc2, 0x34, 0x5e, 0xf2, 0x7a, 0xa0, 0x76, 0x86, 0xca, 0xed, 0x1e, 0x7c, 0x54, 0xe5, 0xae,
	0xa8, 0x5c, 0xe7, 0x07, 0x68, 0x4b, 0x95, 0x08, 0x16, 0xe9, 0x12, 0x53, 0xea, 0xa1, 0xf4, 0x68,
	0x5d, 0x7a, 0x23, 0x09, 0x0f, 0x9e, 0xaf, 0xe4, 0xcd, 0xa0, 0x8c, 0x38, 0x6f, 0xa0, 0x1d, 0x8b,
	0x85, 0xf0, 0x64, 0xf5, 0x31, 0xe7, 0x57, 0xb4, 0xca, 0x2c, 0xde, 0xca, 0x83, 0x98, 0xdd, 0xe5,
	0x2a, 0xc9, 0xed, 0x1e, 0xd2, 0xea, 0xe6, 0xc6, 0x32, 0x75, 0xee, 0xba, 0xee, 0xbc, 0x7b, 0x84,
	0xf9, 0x6d, 0x6a, 0x2e, 0x43, 0x77, 0xee, 0xbc, 0x05, 0xa7, 0xd0, 0x95, 0x1f, 0xf7, 0x19, 0x66,
	0x66, 0xe7, 0x48, 0xf1, 0x09, 0x97, 0x78, 0x5b, 0xb2, 0x89, 0x1a, 0x52, 0xaf, 0x75, 0x17, 0xaa,
	0x21, 0xd9, 0xcf, 0x87, 0x64, 0xff, 0x1d, 0x52, 0xf0, 0x1a, 0x65, 0x13, 0x39, 0xbe, 0x7a, 0xbf,
	0x03, 0x94, 0x8d, 0xe3, 0x9c, 0x40, 0x47, 0x37, 0xa1, 0xd1, 0x36, 0x38, 0x34, 0xb9, 0xee, 0xf4,
	0xb2, 0x6b, 0xce, 0x4a, 0x6e, 0x39, 0x60, 0x2b, 0xc6, 0x80, 0xcd, 0x15, 0xf9, 0x98, 0xed, 0x5d,
	0x41, 0xcb, 0x3c, 0x78, 0xc7, 0x86, 0xea, 0x7b, 0xb1, 0xd4, 0xfe, 0x72, 0xe9, 0xbc, 0x80, 0xda,
	0xb3, 0xe7, 0x67, 0x42, 0xf9, 0x70, 0xb5, 0xb9, 0xaa, 0x7c, 0x4d, 0x7a, 0x77, 0xb9, 0xd6, 0xfd,
	0x98, 0xf6, 0x4b, 0x53, 0xbb, 0xb1, 0xbe, 0x86, 0xdd, 0x77, 0x60, 0xaf, 0xb7, 0xc4, 0x7f, 0x49,
	0xe7, 0xf8, 0x04, 0xb6, 0xe5, 0x51, 0x3b, 0x00, 0x3b, 0x37, 0xf7, 0xbf, 0xdc, 0x8d, 0xce, 0xec,
	0xad, 0x62, 0x3d, 0xb4, 0x49, 0xb1, 0x76, 0xed, 0xca, 0x75, 0x13, 0x2c, 0x75, 0x69, 0x9e, 0x3d,
	0xff, 0x78, 0x0a, 0x50, 0x66, 0xe4, 0x30, 0xb0, 0xd5, 0xfd, 0xff, 0x57, 0xb9, 0xd5, 0x44, 0x2a,
	0xab, 0xdd, 0x2f, 0x98, 0x9b, 0x8b, 0xad, 0xf9, 0x79, 0xad, 0x8f, 0x3f, 0x18, 0xef, 0x71, 0xff,
	0xcf, 0x53, 0xbe, 0xfe, 0xf6, 0xb7, 0xab, 0xd9, 0x3c, 0x7d, 0xca, 0xc6, 0xfd, 0x49, 0x14, 0x0c,
	0xde, 0x8b, 0xb9, 0x3b, 0x3c, 0x3b, 0x53, 0xff, 0xe9, 0xc9, 0xe9, 0x4c, 0x84, 0xa7, 0xc6, 0xcf,
	0x7c, 0x50, 0xfe, 0xf7, 0xbf, 0xc1, 0xe7, 0x78, 0x07, 0x89, 0xe7, 0xff, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x91, 0xc4, 0xe2, 0x4d, 0x12, 0x08, 0x00, 0x00,
}
